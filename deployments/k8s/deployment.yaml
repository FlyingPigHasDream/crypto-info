apiVersion: apps/v1
kind: Deployment
metadata:
  name: crypto-info
  namespace: crypto-info
  labels:
    app: crypto-info
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: crypto-info
  template:
    metadata:
      labels:
        app: crypto-info
        version: v1
    spec:
      containers:
      - name: crypto-info
        image: crypto-info:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: grpc
        - containerPort: 9091
          name: metrics
        env:
        - name: CRYPTO_APP_ENV
          value: "production"
        - name: CRYPTO_DATABASE_REDIS_HOST
          value: "redis-service"
        - name: CRYPTO_DATABASE_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        - name: CRYPTO_LOG_LEVEL
          value: "info"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: crypto-secret
              key: jwt-secret
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/configs
          readOnly: true
        - name: log-volume
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: crypto-config
      - name: log-volume
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: crypto-info-service
  namespace: crypto-info
  labels:
    app: crypto-info
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: grpc
  - port: 9091
    targetPort: 9091
    protocol: TCP
    name: metrics
  selector:
    app: crypto-info
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: crypto-config
  namespace: crypto-info
data:
  config.yaml: |
    app:
      name: "crypto-info"
      version: "v1.0.0"
      env: "production"
      debug: false
    server:
      http:
        host: "0.0.0.0"
        port: 8080
      grpc:
        host: "0.0.0.0"
        port: 9090
    log:
      level: "info"
      format: "json"
      output: "stdout"
    monitoring:
      metrics:
        enabled: true
        port: 9091
      health_check:
        enabled: true
        path: "/health"
---
apiVersion: v1
kind: Secret
metadata:
  name: crypto-secret
  namespace: crypto-info
type: Opaque
data:
  jwt-secret: Y3J5cHRvLWluZm8tc2VjcmV0LWtleQ== # base64 encoded
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: crypto-info
type: Opaque
data:
  password: cmVkaXMtcGFzc3dvcmQ= # base64 encoded